server:
  port: 8081
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
spring:
  application:
    name: "Proposal-CrediYa"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  config:
    activate:
      on-profile: prod
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"

routes:
  base-path: /api/v1
  paths:
    proposals: "/solicitud"
    states: "/estado"
    proposalTypes: "/tipo-prestamo"

clients:
  users: ${AUTH_SERVICE_URL}/api/v1/usuarios
  auth: ${AUTH_SERVICE_URL}/api/v1/autenticacion

adapters:
  r2dbc:
    host: ${DB_HOST}
    port: ${DB_PORT}
    database: ${DB_NAME}
    schema: ${DB_SCHEMA}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    ssl: ${DB_SSL}

adapter:
  restconsumer:
    timeout: 5000
    url: ${URL_LAMBDA_LOAN_PLAN}
  sqs:
    region: ${AWS_SQS_REGION}
    queueSendNotificationUrl: ${AWS_SQS_SEND_NOTIFICATION_URL}
    queueAutomaticValidationUrl: ${AWS_SQS_AUTOMATIC_VALIDATION_URL}
    queueAutomaticEvaluationResponsesUrl: ${AWS_SQS_AUTOMATIC_EVALUATION_RESPONSES_URL}
    queueReportMetrics: ${AWS_SQS_REPORT_METRICS_URL}
    endpoint: ${AWS_SQS_ENDPOINT}
  management:
    health:
      circuitbreakers:
        enabled: true
  resilience4j:
    circuitbreaker:
      instances:
        postLambdaLoanPlan:
          registerHealthIndicator: true
          failureRateThreshold: 50
          slowCallRateThreshold: 50
          slowCallDurationThreshold: "2s"
          permittedNumberOfCallsInHalfOpenState: 3
          slidingWindowSize: 10
          minimumNumberOfCalls: 10
          waitDurationInOpenState: "10s"

aws:
  accessKeyId: ${AWS_ACCESS_KEY_ID}
  secretAccessKey: ${AWS_SECRET_ACCESS_KEY_ID}
  region: ${AWS_REGION}
  secretName: ${AWS_SECRET_NAME}
